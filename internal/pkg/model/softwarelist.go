// This file is automatically generated. DO NOT EDIT.

package model

type Dataarea struct {
	Endianness string `xml:"endianness,attr"`
	Name       string `xml:"name,attr"`
	Size       string `xml:"size,attr"`
	Width      int    `xml:"width,attr"`
	Rom        []Rom  `xml:"rom"`
}

type Dipswitch struct {
	Mask     int        `xml:"mask,attr"`
	Name     string     `xml:"name,attr"`
	Tag      string     `xml:"tag,attr"`
	Dipvalue []Dipvalue `xml:"dipvalue"`
}

type Dipvalue struct {
	Default string `xml:"default,attr"`
	Name    string `xml:"name,attr"`
	Value   int    `xml:"value,attr"`
}

type Disk struct {
	Name      string `xml:"name,attr"`
	Sha1      string `xml:"sha1,attr"`
	Status    string `xml:"status,attr"`
	Writeable string `xml:"writeable,attr"`
}

type Diskarea struct {
	Name string `xml:"name,attr"`
	Disk Disk   `xml:"disk"`
}

type Feature struct {
	Name  string `xml:"name,attr"`
	Value string `xml:"value,attr"`
}

type Info struct {
	Name  string `xml:"name,attr"`
	Value string `xml:"value,attr"`
}

type Part struct {
	Interface string     `xml:"interface,attr"`
	Name      string     `xml:"name,attr"`
	Dataarea  []Dataarea `xml:"dataarea"`
	Dipswitch Dipswitch  `xml:"dipswitch"`
	Diskarea  Diskarea   `xml:"diskarea"`
	Feature   []Feature  `xml:"feature"`
}

type Rom struct {
	Crc      string `xml:"crc,attr"`
	Loadflag string `xml:"loadflag,attr"`
	Name     string `xml:"name,attr"`
	Offset   string `xml:"offset,attr"`
	Sha1     string `xml:"sha1,attr"`
	Size     string `xml:"size,attr"`
	Status   string `xml:"status,attr"`
	Value    string `xml:"value,attr"`
}

type Sharedfeat struct {
	Name  string `xml:"name,attr"`
	Value string `xml:"value,attr"`
}

type Software struct {
	Cloneof     string       `xml:"cloneof,attr"`
	Name        string       `xml:"name,attr"`
	Supported   string       `xml:"supported,attr"`
	Description string       `xml:"description"`
	Info        []Info       `xml:"info"`
	Notes       string       `xml:"notes"`
	Part        []Part       `xml:"part"`
	Publisher   string       `xml:"publisher"`
	Sharedfeat  []Sharedfeat `xml:"sharedfeat"`
	Year        string       `xml:"year"`
}

type Softwarelist struct {
	Notes    string     `xml:"notes"`
	Software []Software `xml:"software"`
}
